\documentclass[10pt]{article}

% Package Imports
%----------------

\usepackage{enumitem}  % Advanced list settings
\usepackage{fancyhdr}  % Fancy headers and footers
\usepackage[T1]{fontenc}  % Expanded font encoding
\usepackage{geometry}  % Page geometry (margins, etc.)
\usepackage{hyperref}  % Hyperlinks
\usepackage[none]{hyphenat}  % Hyphenation settings
\usepackage{multirow}  % Multirow table
\usepackage[defaultsans]{opensans}  % Opensans font
\usepackage[document]{ragged2e}  % Text alignment
\usepackage{tabularx}  % Advanced tables
\usepackage{titlesec}  % Title formatting
\usepackage[svgnames]{xcolor}  % Colors

% LaTeX Configuration
%---------------------

% Page margins
\geometry{top=.5in,
          bottom=.5in,
          left=.5in,
          right=.5in}

% Document font size
\newcommand{\cvfontsize}{9}

% Document font stuff
\renewcommand{\familydefault}{\sfdefault}
\renewcommand{\normalsize}{\fontsize{\cvfontsize}{\baselineskip}\selectfont}

% Highlight color
\newcommand{\highlightcolor}{RoyalBlue}

% Reformat section
\titleformat{\section}[block]
{\color{\highlightcolor} \Large \bf \scshape }
{}{0em}{}

% No indentation
\setlength{\parindent}{0pt}

% Table width
\newcommand{\tabularxwidth}{\textwidth}

% Link formatting
\hypersetup{
    colorlinks=true,
    linkcolor=blue,
    urlcolor=blue
}


% Header and Footer Configuration
%--------------------------------

% Changing page style to fancy
\pagestyle{fancy}

% Applying default headers and footers
\fancyhf{}

% Renewing commands for the header and footer lines
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}

% Changing offset from the margins
\setlength{\footskip}{0pt}

\rfoot{Page \thepage}
\AtEndDocument{\lfoot{Last updated (* last_updated *). Built with Precis (\url{https://precis.rukmal.me}).}}


% Jinja Macros
%--------------

% Get state or country (state takes preference)
((*- macro stateOrCountry(topObj) *))
    ((*- if topObj.inState is defined *))
        (* topObj.inState[0] *)
    ((*- elif topObj.inCountry is defined *))
        (* topObj.inCountry[0] *)
   ((*- endif *)) 
((*- endmacro *))

% Get location in "City, State/Country" format
((*- macro getLocation(topObj) *))
    (* topObj.inCity[0] ~ ', ' ~ stateOrCountry(topObj) *)
((*- endmacro *))

% Format date (to MMM 'YY, eg: "May '19"')
((*- macro formatDate(dateObj) *))
    (* dateObj.strftime('%b â€˜%y') *)
((*- endmacro *))

% Get date range
((*- macro dateRange(topObj) *))
    ((*- if topObj.endDate is defined *))
        (* formatDate(topObj.hasDate[0]) ~ ' - ' ~ formatDate(topObj.endDate[0]) *)
    ((*- else *))
        (* formatDate(topObj.hasDate[0]) ~ ' - Present' *)
    ((*- endif *))
((*- endmacro *))

% Escape special characters in text
% Currently cleans: '$'
((*- macro cleanText(text) *))
    (* text|replace('$', '\$') *)
((*- endmacro *))


% List the contents of a nested list of lists with a delimiter
((*- macro printListofLists(list, delimit) *))
    ((* set sorted_list = list|sort *))
    ((*- for l in sorted_list *))
        ((*- if loop.last *))
            (* l[0] *)
        ((*- else *))
            (* l[0] ~ delimit *)
        ((*- endif *))
    ((*- endfor *))
((*- endmacro *))

% Only print title if it exists
((*- macro titleIfExists(title, titleText) *))
    ((*- if title|length > 0 *))
        \section{(* titleText *)}
    ((*- endif *))
((*- endmacro *))


% Expand a list of objects, chaining 'hasName' together with comma delimiter
((*- macro expandNames(topObj) *))
    (* topObj|join(', ', attribute='hasName') *)
((*- endmacro *))

% Format a portfolio date (i.e. just the year)
((*- macro formatPortfolioDate(topObj) *))
    ((*- if topObj.hasDate is defined *))
        (* topObj.hasDate[0].strftime('%Y') *)
    ((*- endif *))
((*- endmacro *))

\begin{document}
    % CV Header - Name, address, website and email
    %---------------------------------------------
    \centerline{ \color{\highlightcolor} \huge \textbf{(* full_name *)}}

    \vspace{.5em}

    {\color{\highlightcolor} \centerline{(* email *) $\; \bullet \;$ (* website *) $\; \bullet \;$ (* phone *)} }

    \noindent{\rule{\linewidth}{.2em}}


    % Education
    %---------------------------------------------

    (* titleIfExists(Degree, 'Education') *)

    % Iterating over degrees
    ((* for deg in Degree *))
        \begin{tabularx}{\tabularxwidth}{X r}
            % First line - degree title and date
            \textbf{(* deg.hasName[0] *)} & \textbf{(* formatDate(deg.hasDate[0]) *)} \\
            % Degree university and location
            \quad \textcolor{\highlightcolor}{(* deg.degreeUniversity[0][0] *)} & (* getLocation(deg) *) \\
            % Degree school and department
            \quad (* deg.degreeSchool[0][0] ~ ' (' ~ deg.degreeDepartment[0][0] ~ ')' *) & \\
            % Degree GPA (if any)
            ((* if deg.degreeGPA is defined *))
                \quad \textit{GPA (4.0 Scale):} (* deg.degreeGPA[0] *) & \\
            ((* endif *))
            % Degree awards (if any)
            ((* if deg.affiliated is defined *))
                ((* for group in deg.affiliated|groupby('type') *))
                    ((* if group.grouper == 'Award' *))
                        \quad \textit{Awards:} (* expandNames(group.list) *) & \\
                    ((* endif *))
                ((* endfor *))
            ((* endif *))
        \end{tabularx}

        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

    ((* endfor *))

    % Work Experience
    %---------------------------------------------

    (* titleIfExists(WorkExperience, 'Work Experience') *)

    ((* for we in WorkExperience *))
    % Put in minipage to prevent mid-entry pagebreak
    \begin{minipage}{\tabularxwidth}

        \begin{tabularx}{\tabularxwidth}{X r}
            % First line - job title and location
            \textbf{(* we.hasName[0] *)} & \textbf{(* we.inCity[0] ~ ', ' ~ stateOrCountry(we) *)} \\
            % Main employment organization and date range
            \textcolor{\highlightcolor}{(* we.employedAt[0][0] *)} & (* dateRange(we) *) \\
            % Parent organizations (if any)
            ((* if we.employedAt[0]|length > 1 *))
                ((* for parent_orgset in we.employedAt *))
                    \textit{(* parent_orgset[1:]|join('; ') *)} & \\
                ((* endfor *))
            ((* endif *))
            % Other job titles
            ((* if we.otherTitles is defined *))
                Other Titles: (* we.otherTitles|join(', ') *) & \\
            ((* endif *))
        \end{tabularx}

        % descriptions
        \begin{itemize}[noitemsep, topsep=3pt, parsep=0pt, partopsep=0pt]
            ((* for desc in we.hasDescription *))
                \item (* cleanText(desc) *)
            ((* endfor *))
        \end{itemize}

        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

    \end{minipage}
    ((* endfor *))

    % Publications
    %---------------------------------------------

    (* titleIfExists(Publication, 'Publications') *)

    ((* for pub in Publication *))
        \begin{minipage}{\tabularxwidth}
        \begin{tabularx}{\tabularxwidth}{X}
            % Nested tabular to handle title and date in same column
            {
                \begin{tabularx}{\tabularxwidth}{@{}X r}
                    % Prefix with the current status (if any)
                    ((*- if pub.hasStatus is defined *))
                        \textit{(* '(' ~ pub.hasStatus[0] ~ ') ' *)}
                    ((*- endif *))
                    % Publication title
                    \textbf{(* pub.hasName[0] *)} &
                    % Date on the right
                    \textbf{(* formatPortfolioDate(pub) *)} \\
                \end{tabularx}
            } \\
            % Authors
            (* pub.hasAuthors[0] *) \\

            % TODO: This part can be improved in the future
            % NOTE: Assuming that both publication & conference/journal exists if one does
            ((* if (pub.hasPublication is defined) and (pub.hasPublication[0]|length > 0) *))
                \textit{(* pub.inPublication[0] ~ '; ' ~ pub.inConferenceOrJounral[0] *)} \\
            ((* endif *))
            % Printing website (if exists)
            ((* if pub.hasWebsite is defined *))
                \url{(* pub.hasWebsite[0] *)} \\
            ((* endif *))
            % Printing DOI (if exists)
            ((* if pub.hasDOI is defined *))
                (* pub.hasDOI[0] *) \\
            ((* endif *))
        \end{tabularx}

        % descriptions
        \begin{itemize}[noitemsep, topsep=3pt, parsep=0pt, partopsep=0pt]
            ((* for desc in pub.hasDescription *))
                \item (* cleanText(desc) *)
            ((* endfor *))
        \end{itemize}

        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

        \end{minipage}
    ((* endfor *))

    % Talks
    %---------------------------------------------

    (* titleIfExists(Talk, 'Talks') *)

    ((* for tlk in Talk *))
        \begin{minipage}{\tabularxwidth}
        \begin{tabularx}{\tabularxwidth}{X}
            % Nested tabular to handle title and date in same column
            {
                \begin{tabularx}{\tabularxwidth}{@{}X r}
                    % Talk title
                    \textbf{(* tlk.hasName[0] *)} &
                    % Date on the right
                    \textbf{(* formatPortfolioDate(tlk) *)} \\
                \end{tabularx}
            } \\

            % Collaborators
            ((* if tlk.hasCollaborators is defined *))
                \textit{Collaborators: (* tlk.hasCollaborators[0] *)} \\
            ((* endif *))

            % Printing website (if exists)
            ((* if tlk.hasWebsite is defined *))
                \url{(* tlk.hasWebsite[0] *)} \\
            ((* endif *))
            % Printing DOI (if exists)
            ((* if tlk.hasDOI is defined *))
                (* tlk.hasDOI[0] *) \\
            ((* endif *))

            % description (only using one)
            (* cleanText(tlk.hasDescription[0]) *)
        \end{tabularx}
        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

        \end{minipage}
    ((* endfor *))

    % Knowledge Areas
    %---------------------------------------------

    (* titleIfExists(KnowledgeArea, 'Selected Knowledge Areas') *)

    ((* for kg in KnowledgeArea *))
        % iterating over knowledge areas
        \begin{tabularx}{\tabularxwidth}{X}
            % first line - knowldge area name in bold
            \textbf{(* kg.hasName[0] *)} \\
            % listing all constituent subjects
            (* printListofLists(kg.hasSubject, ', ') *) \\
        \end{tabularx}

        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

    ((* endfor *))


    % Skills and Technologies
    %---------------------------------------------

    (* titleIfExists(SkillGroup, 'Skills and Technologies') *)

    ((* for sg in SkillGroup *))
        % iterating over knowledge areas
        \begin{tabularx}{\tabularxwidth}{X}
            % first line - knowldge area name in bold
            \textbf{(* sg.hasName[0] *)} \\
            % listing all constituent subjects
            (* printListofLists(sg.hasSkill, ', ') *) \\
        \end{tabularx}

        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

    ((* endfor *))


    % Projects
    %---------------------------------------------

    (* titleIfExists(Project, 'Selected Projects') *)

    ((* for proj in Project *))

        \begin{tabularx}{\tabularxwidth}{X}
            % Nested tabular to handle title (fancy, with skills) and date in same row
                {
                    \begin{tabularx}{\tabularxwidth}{@{}X r}
                        % First line - project name in bold, and skills/tech in brackets
                        \textbf{(* proj.hasName[0] *)}
                        ((*- if proj.relatedSkills|length > 0 *))
                            (* '(' ~ proj.relatedSkills|join(', ') ~ ')' *)
                        ((*- endif *))
                        % Alignment separator (after if so it get triggered either way)
                        &
                        % Date on the right
                        \textbf{(* formatPortfolioDate(proj) *)} \\
                    \end{tabularx}
                } \\

            % Collaborators
            ((* if proj.hasCollaborators is defined *))
                \textit{Collaborators:} (* proj.hasCollaborators[0] *) \\
            ((* endif *))

            % Awards
            ((* for award in proj.awards -*))
                ((*- if loop.first *))
                    \textit{Awards:}
                ((*- endif *))
                (* award['award_name'] ~ ' (' ~ award['org_name'] ~ ')' *)
            ((*- endfor *))

            % Printing website (if exists)
            ((* if proj.hasWebsite is defined *))
                \url{(* proj.hasWebsite[0] *)} \\
            ((* endif *))

            % description (only using one)
            (* cleanText(proj.hasDescription[0]) *) \\

        \end{tabularx}

        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

    ((* endfor *))


    % Awards and Certifications
    %---------------------------------------------

    \pagebreak[3]

    % Only print title if any of either exists
    % This is done differently because of the double-section thing
    ((* set award_cert_count = (Award|length + Certification|length) *))

    ((*- if award_cert_count > 0 *))
        \section{Awards and Certifications}
    ((*- endif *))

    % Global counter (over both award and certification; for spacing insertion)
    ((* set counter = 1 *))

    ((* for current_class in [Award, Certification] *))
        ((* for aw_cert in current_class *))
            \begin{minipage}{\tabularxwidth}
            % iterating over awards and certifications
            \begin{tabularx}{\tabularxwidth}{X}
                % Nested tabular to handle title and date in same row
                {
                    \begin{tabularx}{\tabularxwidth}{@{}X r}
                        % Award/Certification name
                        \textbf{(* aw_cert.hasName[0] *)} &
                        % Date on the right
                        \textbf{(* formatPortfolioDate(aw_cert) *)} \\
                    \end{tabularx}
                } \\
                % Link (if any)
                ((*- if aw_cert.hasWebsite is defined *))
                    \url{(* aw_cert.hasWebsite[0] *)} \\
                ((*- endif *))
                % descriptions
                ((* for desc in aw_cert.hasDescription *))
                    (* cleanText(desc) *) \\
                ((* endfor *))
            \end{tabularx}

            % Add vertical space if not last iteration
            ((* if (counter < award_cert_count) *))
                \vspace{.5em}
            ((* endif *))

            % Increment counter
            ((* set counter = counter + 1 *))

            \end{minipage}
        ((* endfor *))
    ((* endfor *))



    % Activities
    %---------------------------------------------

    % Title only if exists
    (* titleIfExists(ActivityType, 'Activities') *)

    % Iterating over activity types
    ((* for act_type in ActivityType *))
        \begin{tabularx}{\tabularxwidth}{X}
            % First line - activity type name in bold
            \textbf{(* act_type.hasName[0] *)} \\
            % Listing all constituent activities
            (* printListofLists(act_type.hasActivity, ', ') *) \\
        \end{tabularx}

        % Add vertical space if not last iteration
        ((* if not loop.last *))
            \vspace{.5em}
        ((* endif *))

    ((* endfor *))

    % Contact Information
    %---------------------------------------------

    \section{Contact Information}
    
    % This is to change the width between the table columns
    \setlength{\tabcolsep}{18pt}

    \begin{center}
        \begin{tabular}{ll}
            (* address_line_1 *) & Phone: (* phone *) \\
            (* address_city_state *) & Email: (* email *) \\
            (* address_zip *) & Homepage: \url{(* website *)} \\
            (* address_country *) & LinkedIn: \url{(* linkedin *)}
        \end{tabular}
    \end{center}

\end{document}

