\documentclass[10pt, letterpaper]{letter}

% Package Imports
%----------------

\usepackage{enumitem}  % Advanced list settings
\usepackage[T1]{fontenc}  % Expanded font encoding
\usepackage{geometry}  % Page geometry (margins, etc.)
\usepackage{hyperref}  % Hyperlinks
\usepackage{multirow}  % Multirow table
\usepackage[defaultsans]{opensans}  % Opensans font
\usepackage[document]{ragged2e}  % Text alignment
\usepackage{tabularx}  % Advanced tables
\usepackage[svgnames]{xcolor}  % Colors

% LaTeX Configuration
%---------------------

% Page margins
\geometry{top=.5in,
          bottom=.5in,
          left=.5in,
          right=.5in}

% Document font
\renewcommand{\familydefault}{\sfdefault}

% Highlight color
\newcommand{\highlightcolor}{RoyalBlue}

% Section title
\newcommand{\sectionTitle}[1]{ \vspace{1em} \raggedright{ \color{\highlightcolor} \large \textbf{\uppercase{ #1}}}}

% No indentation
\setlength{\parindent}{0pt}

% Table width
\newcommand{\tabularxwidth}{\textwidth}

% Link formatting
\hypersetup{
    colorlinks=true,
    linkcolor=blue,
    urlcolor=blue
}


% Jinja Macros
%--------------

% Get state or country (state takes preference)
((*- macro stateOrCountry(topObj) *))
    ((*- if topObj.inState is defined *))
        (* topObj.inState[0] *)
    ((*- elif topObj.inCountry is defined *))
        (* topObj.inCountry[0] *)
   ((*- endif *)) 
((*- endmacro *))

% Get location in "City, State/Country" format
((*- macro getLocation(topObj) *))
    (* topObj.inCity[0] ~ ', ' ~ stateOrCountry(topObj) *)
((*- endmacro *))

% Format date (to MMM 'YY, eg: "May '19"')
((*- macro formatDate(dateObj) *))
    (* dateObj.strftime('%b â€˜%y') *)
((*- endmacro *))

% Get date range
((*- macro dateRange(topObj) *))
    ((*- if topObj.endDate is defined *))
        (* formatDate(topObj.hasDate[0]) ~ ' - ' ~ formatDate(topObj.endDate[0]) *)
    ((*- else *))
        (* formatDate(topObj.hasDate[0]) ~ ' - Present' *)
    ((*- endif *))
((*- endmacro *))

% Escape special characters in text
% Currently cleans: '$'
((*- macro cleanText(text) *))
    (* text|replace('$', '\$') *)
((*- endmacro *))


% List the contents of a nested list of lists with a delimiter
((*- macro printListofLists(list, delimit) *))
    ((*- for l in list *))
        ((*- if loop.last *))
            (* l[0] *)
        ((*- else *))
            (* l[0] ~ delimit *)
        ((*- endif *))
    ((*- endfor *))
((*- endmacro *))

% Only print title if it exists
((*- macro titleIfExists(title, titleText) *))
    ((*- if title|length > 0 *))
        \sectionTitle{(* titleText *)}
    ((*- endif *))
((*- endmacro *))


% Expand a list of objects, chaining 'hasName' together with comma delimiter
((*- macro expandNames(topObj) *))
    (* topObj|join(', ', attribute='hasName') *)
((*- endmacro *))

% Format a portfolio date (i.e. just the year)
((*- macro formatPortfolioDate(topObj) *))
    ((*- if topObj.hasDate is defined *))
        (* topObj.hasDate[0].strftime('%Y') *)
    ((*- endif *))
((*- endmacro *))

\begin{document}
    % CV Header - Name, address, website and email
    %---------------------------------------------
    \centerline{ \color{\highlightcolor} \huge \textbf{(* full_name *)}}

    \vspace{.5em}

    {\color{\highlightcolor} \centerline{(* email *) $\; \bullet \;$ (* website *) $\; \bullet \;$ (* phone *)} }

    \noindent{\rule{\linewidth}{.2em}}


    % Education
    %---------------------------------------------

    (* titleIfExists(Degree, 'Education') *)

    % Iterating over degrees
    ((* for deg in Degree *))
        \begin{tabularx}{\tabularxwidth}{X r}
            % First line - degree title and date
            \textbf{(* deg.hasName[0] *)} & \textbf{(* formatDate(deg.hasDate[0]) *)} \\
            % Degree university and location
            \quad (* deg.degreeUniversity[0][0] *) & (* getLocation(deg) *) \\
            % Degree school and department
            \quad (* deg.degreeSchool[0][0] ~ ' (' ~ deg.degreeDepartment[0][0] ~ ')' *) & \\
            % Degree GPA (if any)
            ((* if deg.degreeGPA is defined *))
                \quad \textit{GPA (4.0 Scale):} (* deg.degreeGPA[0] *) & \\
            ((* endif *))
            % Degree awards (if any)
            ((* if deg.affiliated is defined *))
                ((* for group in deg.affiliated|groupby('type') *))
                    ((* if group.grouper == 'Award' *))
                        \quad \textit{Awards:} (* expandNames(group.list) *) & \\
                    ((* endif *))
                ((* endfor *))
            ((* endif *))
        \end{tabularx}
    ((* endfor *))

    % Work Experience
    %---------------------------------------------

    (* titleIfExists(WorkExperience, 'Work Experience') *)

    ((* for we in WorkExperience *))
    % Put in minipage to prevent mid-entry pagebreak
    \begin{minipage}{\tabularxwidth}

        \begin{tabularx}{\tabularxwidth}{X r}
            % First line - job title and location
            \textbf{(* we.hasName[0] *)} & \textbf{(* we.inCity[0] ~ ', ' ~ stateOrCountry(we) *)} \\
            % Main employment organization and date range
            (* we.employedAt[0][0] *) & (* dateRange(we) *) \\
            % Parent organizations (if any)
            ((* if we.employedAt[0]|length > 1 *))
                ((* for parent_orgset in we.employedAt *))
                    \textit{(* parent_orgset[1:]|join('; ') *)} & \\
                ((* endfor *))
            ((* endif *))
            % Other job titles
            ((* if we.otherTitles is defined *))
                Other Titles: (* we.otherTitles|join(', ') *) & \\
            ((* endif *))
        \end{tabularx}

        % descriptions
        \begin{itemize}[noitemsep, topsep=3pt, parsep=0pt, partopsep=0pt]
            ((* for desc in we.hasDescription *))
                \item (* cleanText(desc) *)
            ((* endfor *))
        \end{itemize}

    \end{minipage}
    ((* endfor *))

    % Publications
    %---------------------------------------------

    (* titleIfExists(Publication, 'Publications') *)

    ((* for pub in Publication *))
        \begin{minipage}{\tabularxwidth}
        \begin{tabularx}{\tabularxwidth}{X}
            % Nested tabular to handle title and date in same column
            {
                \begin{tabularx}{\tabularxwidth}{@{}X r}
                    % Prefix with the current status (if any)
                    ((*- if pub.hasStatus is defined *))
                        \textit{(* '(' ~ pub.hasStatus[0] ~ ') ' *)}
                    ((*- endif *))
                    % Publication title
                    \textbf{(* pub.hasName[0] *)} &
                    % Date on the right
                    \textbf{(* formatPortfolioDate(pub) *)} \\
                \end{tabularx}
            } \\
            % Authors
            (* pub.hasAuthors[0] *) \\

            % NOTE: Assuming that both publication & conference/journal exists if one does
            ((* if (pub.hasPublication is defined) and (pub.hasPublication[0]|length > 0) *))
                \textit{(* pub.inPublication[0] ~ '; ' ~ pub.inConferenceOrJounral[0] *)} \\
            ((* endif *))
            % Printing website (if exists)
            ((* if pub.hasWebsite is defined *))
                \url{(* pub.hasWebsite[0] *)} \\
            ((* endif *))
            % Printing DOI (if exists)
            ((* if pub.hasDOI is defined *))
                (* pub.hasDOI[0] *) \\
            ((* endif *))
        \end{tabularx}

        % descriptions
        \begin{itemize}[noitemsep, topsep=3pt, parsep=0pt, partopsep=0pt]
            ((* for desc in pub.hasDescription *))
                \item (* cleanText(desc) *)
            ((* endfor *))
        \end{itemize}

        \end{minipage}
    ((* endfor *))

    % Talks
    %---------------------------------------------

    % Knowledge Areas
    %---------------------------------------------
    \pagebreak

    (* titleIfExists(KnowledgeArea, 'Selected Knowledge Areas') *)

    ((* for kg in KnowledgeArea *))
        % iterating over knowledge areas
        \begin{tabularx}{\tabularxwidth}{X}
            % first line - knowldge area name in bold
            \textbf{(* kg.hasName[0] *)} \\
            % listing all constituent subjects
            (* printListofLists(kg.hasSubject, ', ') *) \\
        \end{tabularx}

        % add vspace if not last line
        ((* if not loop.last *))
            \vspace{-.5em}
        ((* endif *))

    ((* endfor *))


    % Skills and Technologies
    %---------------------------------------------

    (* titleIfExists(SkillGroup, 'Skills and Technologies') *)

    ((* for sg in SkillGroup *))
        % iterating over knowledge areas
        \begin{tabularx}{\tabularxwidth}{X}
            % first line - knowldge area name in bold
            \textbf{(* sg.hasName[0] *)} \\
            % listing all constituent subjects
            (* printListofLists(sg.hasSkill, ', ') *) \\
        \end{tabularx}

        % add vspace if not last line
        ((* if not loop.last *))
            \vspace{-.5em}
        ((* endif *))

    ((* endfor *))

\end{document}

