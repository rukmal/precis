\documentclass[10pt, letterpaper]{letter}

% Package Imports
%----------------

\usepackage{enumitem}  % Advanced list settings
\usepackage[T1]{fontenc}  % Expanded font encoding
\usepackage{geometry}  % Page geometry (margins, etc.)
\usepackage{hyperref}  % Hyperlinks
\usepackage{multirow}  % Multirow table
\usepackage[defaultsans]{opensans}  % Opensans font
\usepackage{tabularx}  % Advanced tables
\usepackage[svgnames]{xcolor}  % Colors

% LaTeX Configuration
%---------------------

% Page margins
\geometry{top=.5in,
          bottom=.5in,
          left=.5in,
          right=.5in}

% Document font
\renewcommand{\familydefault}{\sfdefault}

% Highlight color
\newcommand{\highlightcolor}{RoyalBlue}

% Section title
\newcommand{\sectionTitle}[1]{ \vspace{1em} { \color{\highlightcolor} \large \textbf{ \uppercase{ #1}}}}

% Jinja Macros
%--------------

% Get state or country (state takes preference)
((*- macro stateOrCountry(topObj) *))
    ((*- if topObj.inState is defined *))
        (* topObj.inState[0] *)
    ((*- elif topObj.inCountry is defined *))
        (* topObj.inCountry[0] *)
   ((*- endif *)) 
((*- endmacro *))

% Get location in "City, State/Country" format
((*- macro getLocation(topObj) *))
    (* topObj.inCity[0] ~ ', ' ~ stateOrCountry(topObj) *)
((*- endmacro *))

% Format date (to MMM 'YY, eg: "May '19"')
((*- macro formatDate(dateObj) *))
    (* dateObj.strftime('%b â€˜%y') *)
((*- endmacro *))

% Get date range
((*- macro dateRange(topObj) *))
    ((*- if topObj.endDate is defined *))
        (* formatDate(topObj.hasDate[0]) ~ ' - ' ~ formatDate(topObj.endDate[0]) *)
    ((*- else *))
        (* formatDate(topObj.hasDate[0]) ~ ' - Present' *)
    ((*- endif *))
((*- endmacro *))

% Escape special characters in text
% Currently cleans: '$'
((*- macro cleanText(text) *))
    (* text|replace('$', '\$') *)
((*- endmacro *))


% Expand a list of objects, chaining 'hasName' together with comma delimiter
((*- macro expandNames(topObj) *))
    (* topObj|join(', ', attribute='hasName') *)
((*- endmacro *))

\begin{document}
    % CV Header - Name, address, website and email
    %---------------------------------------------
    \centerline{ \color{\highlightcolor} \huge (* full_name *)}

    \vspace{.5em}

    {\color{\highlightcolor} \centerline{(* email *) $\bullet$ (* website *) $\bullet$ (* phone *)} }

    \noindent{\rule{\linewidth}{.2em}}


    % Education
    %---------------------------------------------
    \sectionTitle{Education}

    % Iterating over degrees
    ((* for deg in Degree *))
        \begin{tabularx}{\textwidth}{X r}
            % First line - degree title and date
            \textbf{(* deg.hasName[0] *)} & \textbf{(* formatDate(deg.hasDate[0]) *)} \\
            % Degree university and location
            \quad (* deg.degreeUniversity[0][0] *) & (* getLocation(deg) *) \\
            % Degree school and department
            \quad (* deg.degreeSchool[0][0] ~ ' (' ~ deg.degreeDepartment[0][0] ~ ')' *) & \\
            % Degree GPA (if any)
            ((* if deg.degreeGPA is defined *))
                \quad \textit{GPA (4.0 Scale): (* deg.degreeGPA[0] *)} & \\
            ((* endif *))
            % Degree awards (if any)
            ((* if deg.affiliated is defined *))
                ((* for group in deg.affiliated|groupby('type') *))
                    ((* if group.grouper == 'Award' *))
                        \quad \textit{Awards: (* expandNames(group.list) *)} & \\
                    ((* endif *))
                ((* endfor *))
            ((* endif *))
        \end{tabularx}
    ((* endfor *))

    % Work Experience
    %---------------------------------------------
    \sectionTitle{Work Experience}

    ((* for we in WorkExperience *))
        \begin{tabularx}{\textwidth}{X r}
            % First line - job title and location
            \textbf{(* we.hasName[0] *)} & \textbf{(* we.inCity[0] ~ ', ' ~ stateOrCountry(we) *)} \\
            % Main employment organization and date range
            (* we.employedAt[0][0] *) & (* dateRange(we) *) \\
            % Parent organizations
            ((* for parent_orgset in we.employedAt *))
                \textit{(* parent_orgset[1:]|join('; ') *)} & \\
            ((* endfor *))
        \end{tabularx}
        \vspace{-1em}
        % descriptions
        \begin{itemize}[noitemsep, topsep=0pt, parsep=0pt, partopsep=0pt]
            ((* for desc in we.hasDescription *))
                \item (* cleanText(desc) *)
            ((* endfor *))
        \end{itemize}
    ((* endfor *))
\end{document}

